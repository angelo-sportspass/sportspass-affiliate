<?php

namespace app\api\modules\v1\models;

use yii\db\Expression;
use app\lib\db\ActiveRecord;
use app\lib\helpers\StringHelper;
use app\api\modules\v1\models\Settings;

/**
 * Class Club
 * @property $name
 * @property $slug_name
 * @property $affiliate_id
 * @property $affiliate_merchant_id
 * @property $link
 * @property $type
 * @property $commission
 * @property $status
 * @property $created_at
 * @property $updated_at
 * @package app\api\modules\v1\models
 */
class Retailer extends ActiveRecord
{
    const RETAILER_TYPE_AFFILIATE = 'affiliate';
    const RETAILER_TYPE_DIRECT    = 'direct';

    const REQUEST_METHOD_PUT = 'PUT';
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%retailer}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        //@todo define retailer current and affiliate fields
        return [
            [['name'],'string'],
            [[
                'name',
                'description',
                'affiliate_id',
                'affiliate_merchant_id',
                'type',
                'logo',
                'link',
                'slug_name',
                'commission',
                'status',
                'created_at',
                'updated_at'
            ], 'safe']
        ];
    }

    /**
     * @return array
     */
    public function attributeLabels()
    {
        //@todo define retailer current and affiliate fields
        return [
            'id' => t('ID'),
            'name' => t('Name'),
            'description' => t('Description'),
            'affiliate_id' => t('Affiliate ID'),
            'affiliate_merchant_id' => t('Affiliate Merchant ID'),
            'type' => t('Type'),
            'logo' => t('Logo'),
            'link' => t('Link'),
            'slug_name' => t('Slug Name'),
            'commission' => t('Commission'),
            'status' => t('status'),
            'created_at' => t('Created At'),
            'updated_at' => t('Updated At')
        ];
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        if ($this->isNewRecord) {

            $this->slug_name  = StringHelper::createSlug($this->name);
            $this->link       = Settings::getSettingsValue(Settings::FONTEND_URL) . '/retailer/' . $this->slug_name;
            $this->created_at = new Expression('NOW()');
        }

        if (app()->request->method == self::REQUEST_METHOD_PUT) {
            $this->updated_at = new Expression('NOW()');
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @param $id
     * @return static
     */
    public static function findOrCreate($id)
    {
        $obj = static::findOne($id);
        return $obj ?: new static;
    }

    /**
     * @param $mid
     * @return static
     */
    public static function findRetailerOrCreate($mid)
    {
        $obj = static::findOne([
            'affiliate_merchant_id' => $mid
        ]);
        return $obj ? null : new static;
    }
}