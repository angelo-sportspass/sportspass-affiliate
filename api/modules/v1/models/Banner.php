<?php

namespace app\api\modules\v1\models;

use app\lib\helpers\Url;
use yii\web\UploadedFile;
use yii\db\Expression;
use app\lib\db\Query;
use app\lib\db\ActiveRecord;

/**
 * Class Banner
 * @property $name
 * @property $type
 * @property $is_default
 * @property $is_login
 * @property $is_hot_offer
 * @property $is_home_page
 * @property $is_new_tab
 * @property $is_trending_offers
 * @property $is_trending_experiences
 * @package app\api\modules\v1\models
 */
class Banner extends ActiveRecord
{
    const REQUEST_METHOD_PUT = 'PUT';

    /**
     * Local Path to upload
     * @var string
     */
    public $localPath = '/api/uploads/';
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%banner}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        //@todo define banner current and affiliate fields
        return [
            [[
                'id',
            ], 'safe']
        ];
    }

    /**
     * @return array
     */
    public function attributeLabels()
    {
        //@todo define banner current and affiliate fields

        return [
            'id' => t('ID'),
        ];
    }

    /**
     * @param bool $insert
     * @return bool
     * @throws \yii\web\HttpException
     */
    public function beforeSave($insert)
    {
        if ($this->isNewRecord) {
            $this->created_at = new Expression('NOW()');
        }

        if (app()->request->method == self::REQUEST_METHOD_PUT) {
            $this->updated_at = new Expression('NOW()');
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @param $id
     * @return static
     */
    public static function findOrCreate($id)
    {
        $obj = static::findOne($id);
        return $obj ?: new static;
    }
}