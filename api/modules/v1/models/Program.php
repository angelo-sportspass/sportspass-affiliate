<?php

namespace app\api\modules\v1\models;

use yii\db\Expression;
use yii\db\ActiveRecord;
use app\lib\db\ActiveQuery;

/**
 * Program Model
 *
 * @author Angelo angelo@sportspass.com.au
 */
class Program extends ActiveRecord
{
    const REQUEST_METHOD_POST = 'POST';
    const REQUEST_METHOD_PUT  = 'PUT';
    const STATUS_ACTIVE = 1;

    const SPORTSPASS = 1;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%program}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['name', 'url_staging', 'url_production'], 'string'],
            [[
                'name',
                'short_name',
                'api_url',
                'program_logo',
                'program_color',
                'program_currency',
                'program_currency_prefix',
                'program_email',
                'info_email',
                'stripe_secret_key',
                'stripe_public_key',
                'url_staging',
                'url_production',
                'script_google',
                'script_lucky_orange',
                'script_rakuten',
                'status'
            ], 'safe'],
        ];
    }

    /**
     * @return array
     */
    public function attributeLabels()
    {
        return [
            'id' => t('Program ID'),
            'name' => t('Program Name'),
            'api_url' => t('API URL'),
            'staging_url' => t('Staging URL'),
            'production_url' => t('Production URL'),
            'program_currency' => t('Program Currency'),
            'status' => t('Status'),
            'created_at' => t('Created At'),
            'updated_at' => t('Updated At'),
        ];
    }

    /**
     * @param bool $insert
     * @return bool
     * @throws \yii\base\Exception
     */
    public function beforeSave($insert)
    {

        if ($this->isNewRecord) {
            $this->created_at = new Expression('NOW()');
        }

        if (app()->request->method == self::REQUEST_METHOD_PUT) {
            $this->updated_at = new Expression('NOW()');
        }

        return parent::beforeSave($insert);
    }

    /**
     * @param bool $insert
     * @param array $changedAttributes
     */
    public function afterSave($insert, $changedAttributes)
    {
        /**
         * @todo Task List
         * 1. Save Program Offer
         * 2. Save ProgramOfferOrderFee
         * 3. Save ProgramOfferBusinessRules
         */
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}